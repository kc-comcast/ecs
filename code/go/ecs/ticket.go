// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by scripts/gocodegen.go - DO NOT EDIT.

package ecs

import (
	"time"
)

// A ticket is defined as a documented record of any form of request or
// reported issue.
// Tickets can be associated with hardware, software, access, procurement, etc.
// requests. They can also be associated with ITIL /ITSM support processes
// Ticket fields provide key basic details about the ticket itself.
type Ticket struct {
	// Name of the person or group with whom the ticket is currently assigned.
	Assignee string `ecs:"assignee"`

	// Timestamp the ticket was created.
	Created time.Time `ecs:"created"`

	// Long description / body of the ticket.  Typically contains all details
	// and specifics of the ticket.
	DescriptionLong string `ecs:"description.long"`

	// Short description / title of the ticket.  Typically, a brief overview.
	DescriptionShort string `ecs:"description.short"`

	// Custom key/value pairs.
	// Can be used to add meta information about the ticket, or include
	// additional customized ticket fields. Should not contain nested objects.
	// All values are stored as keyword.
	Details map[string]interface{} `ecs:"details"`

	// Numeric or alphanumeric unique identifier of the ticket; typically a
	// ticket or record ID.
	Number string `ecs:"number"`

	// Numeric or alphanumeric priority value assigned to the ticket.
	Priority string `ecs:"priority"`

	// The name of the person or group that is making the request.  Can be
	// different than the person or group who submitted the ticket.
	Requester string `ecs:"requester"`

	// Numeric or alphanumeric severity value assigned to the ticket.
	Severity string `ecs:"severity"`

	// Currently assigned state for the ticket.  May or may not be the same as
	// ticket status.
	State string `ecs:"state"`

	// Currently assigned status for the ticket.  May or may not be the same as
	// ticket state.
	Status string `ecs:"status"`

	// The name of the person or group that submitted the request.  Can be
	// different than the person or group that is the requester of the ticket.
	Submitter string `ecs:"submitter"`

	// List/Array of tag attributes which may be assigned to the ticket.
	// All values are stored as keyword.
	Tags map[string]interface{} `ecs:"tags"`

	// The type categorization of the ticket.
	Type string `ecs:"type"`
}
